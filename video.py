#from bot import MEALSIZE, MEALBREADSIZE, MANU, transform_list,session,BRANCHES,manu_buttons
import bot
import crud
from telegram import ReplyKeyboardMarkup,Update,WebAppInfo,KeyboardButton,InlineKeyboardMarkup,InlineKeyboardButton,ReplyKeyboardRemove
from telegram.ext import (
    Application,
    CommandHandler,
    ContextTypes,
    ConversationHandler,
    MessageHandler,
    filters,
    CallbackQueryHandler,PicklePersistence
)

import pytz 
from datetime import datetime,timedelta


async def vidcomment(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    entered_data = update.message.text
    reply_keyboard = [['‚¨ÖÔ∏è –ù–∞–∑–∞–¥']]
    if entered_data == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥':
        context.user_data['page_number'] =0
        request_db = crud.get_branch_list(db=bot.session,sphere_status=1)
        reply_keyboard = bot.transform_list(request_db,2,'name')
        reply_keyboard.insert(0,['‚¨ÖÔ∏è –ù–∞–∑–∞–¥'])
        reply_keyboard.append(['<<<–ü—Ä–µ–¥—ã–¥—É—â–∏–π','–°–ª–µ–¥—É—é—â–∏–π>>>'])
        await update.message.reply_text(f"–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª–∏–∞–ª –∏–ª–∏ –æ—Ç–¥–µ–ª:",reply_markup=ReplyKeyboardMarkup(reply_keyboard,resize_keyboard=True))
        return bot.BRANCHES
    context.user_data['comment'] = entered_data
    await update.message.reply_text(f"–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Å–æ–±—ã—Ç–∏—è –ø—Ä–∏–º–µ—Ä: 01.01.2024  7:00",reply_markup=ReplyKeyboardMarkup(reply_keyboard,resize_keyboard=True))
    return bot.VIDFROM



async def vidfrom(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    entered_data = update.message.text
    reply_keyboard = [['‚¨ÖÔ∏è –ù–∞–∑–∞–¥']]
    if entered_data == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥':
        await update.message.reply_text('–û–ø–∏—à–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–æ–±—ã—Ç–∏–µ –≤ –¥–µ—Ç–∞–ª—è—Ö',reply_markup=ReplyKeyboardMarkup(reply_keyboard,resize_keyboard=True))
        return bot.VIDCOMMENT
    context.user_data['vidfrom'] = entered_data
    await update.message.reply_text(f"–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –∫–æ–Ω—Ü–∞ —Å–æ–±—ã—Ç–∏—è –ø—Ä–∏–º–µ—Ä: 01.01.2024  10:00",reply_markup=ReplyKeyboardMarkup(reply_keyboard,resize_keyboard=True))
    return bot.VIDTO


async def vidto(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    entered_data = update.message.text
    reply_keyboard = [['‚¨ÖÔ∏è –ù–∞–∑–∞–¥']]
    if entered_data == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥':
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Å–æ–±—ã—Ç–∏—è –ø—Ä–∏–º–µ—Ä: 01.01.2024  7:00",reply_markup=ReplyKeyboardMarkup(reply_keyboard,resize_keyboard=True))
        return bot.VIDFROM
    context.user_data['vidto'] = entered_data
    reply_keyboard.append(['–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'])
    await update.message.reply_text(f"–ü—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ",reply_markup=ReplyKeyboardMarkup(reply_keyboard,resize_keyboard=True))
    #await update.message.reply_text(f"Manu",reply_markup=ReplyKeyboardMarkup(bot.manu_buttons,resize_keyboard=True))
    #fillial_query = crud.getchildbranch(db=bot.session,fillial=context.user_data['branch'],type=int(context.user_data['type']),factory=int(context.user_data['sphere_status']))
    #user_query = crud.get_user_tel_id(db=bot.session,id=update.message.from_user.id)
    #data = crud.add_video_request(db=bot.session,category_id=,fillial_id=fillial_query.id,user_id=user_query.id,comment=context.user_data['comment'],vidfrom=context.user_data['vidfrom'],vidto=context.user_data['vidto'])
    return bot.VIDFILES

async def vidfiles(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    reply_keyboard = [['‚¨ÖÔ∏è –ù–∞–∑–∞–¥']]
    if update.message.text:
        entered_data = update.message.text

        if entered_data == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥':
            await update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Å–æ–±—ã—Ç–∏—è –ø—Ä–∏–º–µ—Ä: 01.01.2024  7:00',reply_markup=ReplyKeyboardMarkup(reply_keyboard,resize_keyboard=True))
            return bot.VIDFROM
        else:
            photo_vid = None
    else:
        if update.message.document:
           #context.user_data['file_url']=f"files/{update.message.document.file_name}"
            file_id = update.message.document.file_id
            file_name = update.message.document.file_name
            new_file = await context.bot.get_file(file_id=file_id)
            file_content = await new_file.download_as_bytearray()
            #files_open = {'files':file_content}
        if update.message.photo:
            file_name = f"{update.message.photo[-1].file_id}.jpg"
            getFile = await context.bot.getFile(update.message.photo[-1].file_id)
            file_content = await getFile.download_as_bytearray()
            #files_open = {'files':file_content}
        photo_vid = f"{bot.backend_location}files/{file_name}"
        with open(photo_vid,'wb+') as f:
            f.write(file_content)
            f.close()
        context.user_data['image_car']='files/'+file_name
        photo_vid = f"files/{file_name}"

        
    
    
    
    await update.message.reply_text(f"Manu",reply_markup=ReplyKeyboardMarkup(bot.manu_buttons,resize_keyboard=True))
    fillial_query = crud.getchildbranch(db=bot.session,fillial=context.user_data['branch'],type=int(context.user_data['type']),factory=int(context.user_data['sphere_status']))
    user_query = crud.get_user_tel_id(db=bot.session,id=update.message.from_user.id)
    data = crud.add_video_request(db=bot.session,category_id=60,fillial_id=fillial_query.id,user_id=user_query.id,comment=context.user_data['comment'],vidfrom=context.user_data['vidfrom'],vidto=context.user_data['vidto'])
    if photo_vid is not None:
        add_files = crud.create_files(db=bot.session,request_id=data.id,filename=photo_vid)
    formatted_datetime_str = data.created_at.strftime("%d.%m.%Y %H:%M")
    keyboard_button = []
    if photo_vid is not None:
        keyboard_button = [{'text':'–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ',"url":f"{bot.BASE_URL}{photo_vid}"}]
    bot.sendtotelegramviewimage(bot_token=bot.BOTTOKEN,chat_id='-1002124172379',message_text="üìë–ó–∞—è–≤–∫–∞ ‚Ññ "+str(data.id)+"\n\nüìç–§–∏–ª–∏–∞–ª: "+str(data.fillial.parentfillial.name)+"\n\n–ò–º—è: "+str(user_query.full_name)+"\n–ù–æ–º–µ—Ä: "+user_query.phone_number+"\n–¢–µ–ª–µ–≥—Ä–∞–º: "+f"https://t.me/{update.message.from_user.username}"+"\nüïò–î–∞—Ç–∞ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏: "+str(formatted_datetime_str)+"\n\nüè≥Ô∏è–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–æ —Å–æ–±—ã—Ç–∏—è: "+data.update_time['vidfrom']+"\nüèÅ–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –∫–æ–Ω—Ü–∞ —Å–æ–±—ã—Ç–∏—è: "+data.update_time['vidto']+"\n\nüí¨–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: "+str(data.description),buttons=keyboard_button)
    await update.message.reply_text(f"–°–ø–∞—Å–∏–±–æ, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ #{data.id}s –ø–æ –í–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–∞. –ö–∞–∫ –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—É–¥–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –≤ —Ä–∞–±–æ—Ç—É ,–≤—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.",reply_markup=ReplyKeyboardMarkup(bot.manu_buttons,resize_keyboard=True))
    #await update.message.reply_text(f"–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",reply_markup=ReplyKeyboardMarkup(manu_buttons,resize_keyboard=True))
    return bot.MANU